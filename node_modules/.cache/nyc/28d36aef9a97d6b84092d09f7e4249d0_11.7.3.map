{"version":3,"sources":["_template.js"],"names":["generate","placeholders","string","reduce","carry","key","placeholder","placeholderRegExp","RegExp","replace"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;AAYA,SAASA,QAAT,CAAkBC,YAAlB,EAAgCC,MAAhC,EAAwC;AACpC,QAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAC9B,eAAOA,OAAOD,YAAP,CAAP;AACH;;AAED,WAAO,uBAAeA,YAAf,EACFE,MADE,CACK,UAACC,KAAD,QAA+B;AAAA;AAAA,YAAtBC,GAAsB;AAAA,YAAjBC,WAAiB;;AACnC,YAAMC,oBAAoB,IAAIC,MAAJ,QAAgBH,GAAhB,SAAyB,GAAzB,CAA1B;;AAEA,eAAOD,MAAMK,OAAN,CAAcF,iBAAd,EAAiCD,WAAjC,CAAP;AACH,KALE,EAKAJ,MALA,CAAP;AAMH;;QAGGF,Q,GAAAA,Q","file":"_template.js","sourceRoot":"/Users/kyeah/jam/github-release-notes/lib/src","sourcesContent":["/**\n * Generate the templated string based on\n * a placeholders Object\n *\n * @since  0.6.0\n * @private\n *\n * @param  {Object} placeholders All the keys/values to update\n * @param  {string|Function} string The string or the function that needs to be replaced\n *\n * @return {string}\n */\nfunction generate(placeholders, string) {\n    if (typeof string === 'function') {\n        return string(placeholders);\n    }\n\n    return Object.entries(placeholders)\n        .reduce((carry, [key, placeholder]) => {\n            const placeholderRegExp = new RegExp(`{{${key}}}`, 'g');\n\n            return carry.replace(placeholderRegExp, placeholder);\n        }, string);\n}\n\nexport {\n    generate\n};\n"]}